{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PoliticalPartyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:54806/parties';\n  }\n  getAllPoliticalParties() {\n    return this.http.get(this.apiUrl);\n    console.log(this.apiUrl);\n  }\n  createPoliticalParty(party) {\n    return this.http.post(this.apiUrl, party);\n  }\n  getPoliticalPartyById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n    console.log(url);\n  }\n  updatePoliticalParty(party) {\n    const url = `${this.apiUrl}/${party.politicalPartyId}`;\n    return this.http.put(url, party);\n    console.log(url);\n  }\n  deletePoliticalParty(id) {\n    console.log(\"id\" + id);\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n    console.log(url);\n  }\n  searchPoliticalPartyByName(name) {\n    const url = `${this.apiUrl}/searchParty?name=${name}`;\n    return this.http.get(url);\n    console.log(url);\n  }\n  searchPoliticalPartyByFounder(founder) {\n    const url = `${this.apiUrl}/search?founderName=${founder}`;\n    return this.http.get(url);\n    console.log(url);\n  }\n}\nPoliticalPartyService.ɵfac = function PoliticalPartyService_Factory(t) {\n  return new (t || PoliticalPartyService)(i0.ɵɵinject(i1.HttpClient));\n};\nPoliticalPartyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PoliticalPartyService,\n  factory: PoliticalPartyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PoliticalPartyService","constructor","http","apiUrl","getAllPoliticalParties","get","console","log","createPoliticalParty","party","post","getPoliticalPartyById","id","url","updatePoliticalParty","politicalPartyId","put","deletePoliticalParty","delete","searchPoliticalPartyByName","name","searchPoliticalPartyByFounder","founder","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Downloads\\FullStack-Angular-DotNet-Political-Party-Solution-main\\Frontend\\src\\app\\service\\political-party.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PoliticalParty } from '../model/political-party.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PoliticalPartyService {\r\n    private apiUrl = 'http://localhost:54806/parties';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllPoliticalParties(): Observable<PoliticalParty[]> {\r\n        return this.http.get<PoliticalParty[]>(this.apiUrl);\r\n        console.log(this.apiUrl);\r\n    }\r\n\r\n    createPoliticalParty(party: PoliticalParty): Observable<PoliticalParty> {\r\n        return this.http.post<PoliticalParty>(this.apiUrl, party);\r\n    }\r\n\r\n    getPoliticalPartyById(id: number): Observable<PoliticalParty> {\r\n        const url = `${this.apiUrl}/${id}`;\r\n        return this.http.get<PoliticalParty>(url);\r\n        console.log(url);\r\n    }\r\n\r\n    updatePoliticalParty(party: PoliticalParty): Observable<PoliticalParty> {\r\n        const url = `${this.apiUrl}/${party.politicalPartyId}`;\r\n        return this.http.put<PoliticalParty>(url, party);\r\n        console.log(url);\r\n    }\r\n\r\n    deletePoliticalParty(id: number): Observable<void> {\r\n        console.log(\"id\"+id);\r\n        const url = `${this.apiUrl}/${id}`;\r\n        return this.http.delete<void>(url);\r\n        console.log(url);\r\n    }\r\n\r\n    searchPoliticalPartyByName(name: string): Observable<PoliticalParty[]> {\r\n        const url = `${this.apiUrl}/searchParty?name=${name}`;\r\n        return this.http.get<PoliticalParty[]>(url);\r\n        console.log(url);\r\n    }\r\n\r\n    searchPoliticalPartyByFounder(founder: string): Observable<PoliticalParty[]> {\r\n        const url = `${this.apiUrl}/search?founderName=${founder}`;\r\n        return this.http.get<PoliticalParty[]>(url);\r\n        console.log(url);\r\n    }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,qBAAqB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAET;EAExCC,sBAAsBA,CAAA;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,IAAI,CAACF,MAAM,CAAC;IACnDG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;EAC5B;EAEAK,oBAAoBA,CAACC,KAAqB;IACtC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAiB,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAC7D;EAEAE,qBAAqBA,CAACC,EAAU;IAC5B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,IAAIS,EAAE,EAAE;IAClC,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAiBQ,GAAG,CAAC;IACzCP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EACpB;EAEAC,oBAAoBA,CAACL,KAAqB;IACtC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,IAAIM,KAAK,CAACM,gBAAgB,EAAE;IACtD,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAiBH,GAAG,EAAEJ,KAAK,CAAC;IAChDH,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EACpB;EAEAI,oBAAoBA,CAACL,EAAU;IAC3BN,OAAO,CAACC,GAAG,CAAC,IAAI,GAACK,EAAE,CAAC;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,IAAIS,EAAE,EAAE;IAClC,OAAO,IAAI,CAACV,IAAI,CAACgB,MAAM,CAAOL,GAAG,CAAC;IAClCP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EACpB;EAEAM,0BAA0BA,CAACC,IAAY;IACnC,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,qBAAqBiB,IAAI,EAAE;IACrD,OAAO,IAAI,CAAClB,IAAI,CAACG,GAAG,CAAmBQ,GAAG,CAAC;IAC3CP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EACpB;EAEAQ,6BAA6BA,CAACC,OAAe;IACzC,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,uBAAuBmB,OAAO,EAAE;IAC1D,OAAO,IAAI,CAACpB,IAAI,CAACG,GAAG,CAAmBQ,GAAG,CAAC;IAC3CP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EACpB;;AA3CSb,qBAAqB,C;mBAArBA,qBAAqB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArB1B,qBAAqB,C;SAArBA,qBAAqB;EAAA2B,OAAA,EAArB3B,qBAAqB,CAAA4B,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}