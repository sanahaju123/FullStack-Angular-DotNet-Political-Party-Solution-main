{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PoliticalPartyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/parties';\n  }\n  getAllPoliticalParties() {\n    return this.http.get(this.apiUrl);\n  }\n  createPoliticalParty(party) {\n    return this.http.post(this.apiUrl, party);\n  }\n  getPoliticalPartyById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  updatePoliticalParty(party) {\n    const url = `${this.apiUrl}/${party.id}`;\n    return this.http.put(url, party);\n  }\n  deletePoliticalParty(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  searchPoliticalPartyByName(name) {\n    const url = `${this.apiUrl}/search?name=${name}`;\n    return this.http.get(url);\n  }\n  searchPoliticalPartyByFounder(founder) {\n    const url = `${this.apiUrl}/search?founder=${founder}`;\n    return this.http.get(url);\n  }\n}\nPoliticalPartyService.ɵfac = function PoliticalPartyService_Factory(t) {\n  return new (t || PoliticalPartyService)(i0.ɵɵinject(i1.HttpClient));\n};\nPoliticalPartyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PoliticalPartyService,\n  factory: PoliticalPartyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PoliticalPartyService","constructor","http","apiUrl","getAllPoliticalParties","get","createPoliticalParty","party","post","getPoliticalPartyById","id","url","updatePoliticalParty","put","deletePoliticalParty","delete","searchPoliticalPartyByName","name","searchPoliticalPartyByFounder","founder","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Downloads\\FullStack-Angular-DotNet-Political-Party-Solution-main\\Frontend\\src\\app\\service\\political-party.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PoliticalParty } from '../model/political-party.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PoliticalPartyService {\r\n    private apiUrl = 'http://localhost:8080/parties';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllPoliticalParties(): Observable<PoliticalParty[]> {\r\n        return this.http.get<PoliticalParty[]>(this.apiUrl);\r\n    }\r\n\r\n    createPoliticalParty(party: PoliticalParty): Observable<PoliticalParty> {\r\n        return this.http.post<PoliticalParty>(this.apiUrl, party);\r\n    }\r\n\r\n    getPoliticalPartyById(id: number): Observable<PoliticalParty> {\r\n        const url = `${this.apiUrl}/${id}`;\r\n        return this.http.get<PoliticalParty>(url);\r\n    }\r\n\r\n    updatePoliticalParty(party: PoliticalParty): Observable<PoliticalParty> {\r\n        const url = `${this.apiUrl}/${party.id}`;\r\n        return this.http.put<PoliticalParty>(url, party);\r\n    }\r\n\r\n    deletePoliticalParty(id: number): Observable<void> {\r\n        const url = `${this.apiUrl}/${id}`;\r\n        return this.http.delete<void>(url);\r\n    }\r\n\r\n    searchPoliticalPartyByName(name: string): Observable<PoliticalParty[]> {\r\n        const url = `${this.apiUrl}/search?name=${name}`;\r\n        return this.http.get<PoliticalParty[]>(url);\r\n    }\r\n\r\n    searchPoliticalPartyByFounder(founder: string): Observable<PoliticalParty[]> {\r\n        const url = `${this.apiUrl}/search?founder=${founder}`;\r\n        return this.http.get<PoliticalParty[]>(url);\r\n    }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,qBAAqB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAER;EAExCC,sBAAsBA,CAAA;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,IAAI,CAACF,MAAM,CAAC;EACvD;EAEAG,oBAAoBA,CAACC,KAAqB;IACtC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAiB,IAAI,CAACL,MAAM,EAAEI,KAAK,CAAC;EAC7D;EAEAE,qBAAqBA,CAACC,EAAU;IAC5B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAiBM,GAAG,CAAC;EAC7C;EAEAC,oBAAoBA,CAACL,KAAqB;IACtC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAII,KAAK,CAACG,EAAE,EAAE;IACxC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAiBF,GAAG,EAAEJ,KAAK,CAAC;EACpD;EAEAO,oBAAoBA,CAACJ,EAAU;IAC3B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAAOJ,GAAG,CAAC;EACtC;EAEAK,0BAA0BA,CAACC,IAAY;IACnC,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,gBAAgBc,IAAI,EAAE;IAChD,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAmBM,GAAG,CAAC;EAC/C;EAEAO,6BAA6BA,CAACC,OAAe;IACzC,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,mBAAmBgB,OAAO,EAAE;IACtD,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAmBM,GAAG,CAAC;EAC/C;;AApCSX,qBAAqB,C;mBAArBA,qBAAqB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArBvB,qBAAqB,C;SAArBA,qBAAqB;EAAAwB,OAAA,EAArBxB,qBAAqB,CAAAyB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}